attribute vec3 position;
attribute vec2 coords;
attribute vec2 size;
uniform sampler2D tex;
uniform vec4 cameraU;
uniform vec4 cameraV;
uniform vec4 cameraW;
uniform vec4 cameraPos;
uniform mat4 viewProjMat;
uniform mat4 worldMatrix;
uniform mat4 rotateMatrix;
uniform float opacity;

varying vec4 worldPos;
varying vec3 oNormal;
varying vec3 oTangent;
varying vec2 texpos;

void main()
{
	vec3 p = position;
    vec2 tmp = (coords - vec2(0.5))	* 2.0;
    
    vec3 U,V;

	V = vec3(0.0,1.0,0.0);
	vec3 W = cameraPos.xyz-position.xyz;
	U = cross(V,W);
	U = normalize(U);
    
    //p = p + tmp.x * vec3(1.0,0.0,0.0) + tmp.y * vec3(0.0,1.0,0.0); 
	p = p + tmp.x * U + tmp.y * V; 	
    
	worldPos = vec4(p,1.0);
    gl_Position = vec4(p,1.0) * viewProjMat;
    texpos = coords;
	oTangent = vec3(0.0,0.0,0.0);
	oNormal = vec3(0.0,1.0,0.0);
	
}