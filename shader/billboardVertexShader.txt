attribute vec3 position;
attribute vec2 coords;
attribute vec2 size;
uniform sampler2D tex;
uniform vec4 cameraU;
uniform vec4 cameraV;
uniform vec4 cameraW;
uniform vec4 cameraPos;
uniform mat4 viewProjMat;
uniform mat4 worldMatrix;

uniform float opacity;

varying vec4 worldPos;
varying vec3 oNormal;
varying vec3 oTangent;
varying vec2 texpos;

void main()
{
	vec4 p = vec4(position, 1.0)* worldMatrix;
	
    vec2 tmp = (coords - vec2(0.5))	* 2.0;
    
    vec3 U,V;

	V = vec3(0.0,1.0,0.0);
	vec3 W = cameraPos.xyz-p.xyz;
	U = cross(V,W);
	U = normalize(U);
    
	vec4 tmpU = vec4(U,0.0);
	vec4 tmpV = vec4(V,0.0);
	
	p = p + tmp.x * 2.0 * tmpU + tmp.y * 2.0 * tmpV; 	
	worldPos = p;
    gl_Position = worldPos * viewProjMat;
    texpos = coords;
	oTangent = vec3(0.0,0.0,0.0);
	oNormal = vec3(0.0,1.0,0.0);
	
}