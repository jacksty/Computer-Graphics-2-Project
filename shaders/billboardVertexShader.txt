attribute vec3 position;
attribute vec2 coords;
attribute vec3 normal;
attribute vec2 size;
uniform sampler2D tex;
uniform vec4 cameraU;
uniform vec4 cameraV;
uniform vec4 cameraW;
uniform vec4 eyePos;
uniform mat4 projMatrix;
uniform mat4 viewMatrix;
uniform mat4 worldMatrix;
uniform mat4 rotateMatrix;
uniform float opacity;
varying vec4 texcol;
varying vec2 fcoords;
varying float fopacity;
varying vec4 fnormal;
varying vec4 wPos;

void main()
{
	vec3 p = position;
    vec2 tmp = (coords - vec2(0.5, 0.0))	* 2.0;
    
    vec3 U,V;

	V = vec3(0.0,1.0,0.0);
	vec3 W = eyePos.xyz-position.xyz;
	U = cross(V,W);
	U = normalize(U);
    
    p = p + tmp.x * size.x * U + tmp.y * size.y * V;   
    
    gl_Position = vec4(p,1.0) * viewMatrix * projMatrix;
    fcoords = coords;
	fopacity = opacity;
	
}