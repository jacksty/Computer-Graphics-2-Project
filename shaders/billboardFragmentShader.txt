precision highp float;

uniform vec4 lightPos;
uniform vec4 lightColor;
uniform float specEx;

uniform sampler2D tex;
uniform highp vec4 eyePos;
uniform highp mat4 projMatrix;
varying highp vec4 texcol;
varying highp vec2 fcoords;
varying float fopacity;
varying vec4 fnormal;
varying vec4 wPos;
void main()
{
    vec4 texColor = texture2D(tex, fcoords.st);
//	texColor.a = fopacity;
	if( texColor.a < 0.05 )
        discard;
//	gl_FragColor = vec4(0,0,0,texColor.a);
//	vec3 L = normalize(lightPos.xyz - (lightPos.w * wPos.xyz));
//	vec3 N = normalize(fnormal.xyz);
//	float diff = clamp(dot(L, N), 0.0, 1.0);
//	float spec = 0.0;
//	if(diff > 0.0){
//		vec3 V = normalize((eyePos - wPos).xyz);
//		vec3 R = reflect(-L,N);
//		spec = pow(clamp(dot(V,R),0.0,1.0), 16.0);
//	}
//	gl_FragColor.rgb += spec + diff * lightColor.rgb * texColor.rgb;
	gl_FragColor = texColor;

}